org, repo = (ENV["GITHUB_REPOSITORY"]||"").split("/")
match_org, match_repo = (ENV["MATCH_REPOSITORY"]||"").split("/")

platform :mac do
  lane :init_ci do
    github_action(
      api_token: ENV["GH_PAT"],
      org: org,
      repo: repo,
      match_org: match_org,
      match_repo: match_repo,
      writable_deploy_key: true
    )
  end

  desc "Sync codesigning certificates"
  lane :sync_certificates do
    if ENV['USE_SESSION'] != 'true'
      app_store_connect_api_key(
        key_id: ENV["APPSTORE_KEY_ID"],
        issuer_id: ENV["APPSTORE_ISSUER_ID"],
        key_content: ENV['APPSTORE_P8'],
        in_house: false
      )
    end

    # Use readonly mode on non-macOS systems to skip verification
    readonly = ENV['MATCH_READONLY'] == 'true'

    if ENV['GENERATE_APPSTORE'] == 'true'
      match(
        type: "appstore",
        additional_cert_types: "mac_installer_distribution",
        storage_mode: "git",
        git_url: "git@github.com:#{match_org}/#{match_repo}.git",
        app_identifier: ENV["MAC_BUNDLE_ID"],
        readonly: readonly
      )
    end

    if ENV['GENERATE_DEVELOPER_ID'] == 'true'
      match(
        type: "developer_id",
        storage_mode: "git",
        git_url: "git@github.com:#{match_org}/#{match_repo}.git",
        app_identifier: ENV["MAC_BUNDLE_ID"],
        readonly: readonly
      )

      if ENV['GENERATE_PKG'] == 'true'
        match(
          type: "developer_id",
          additional_cert_types: "developer_id_installer",
          storage_mode: "git",
          git_url: "git@github.com:#{match_org}/#{match_repo}.git",
          app_identifier: ENV["MAC_BUNDLE_ID"],
          readonly: readonly
        )
      end
    end
  end
end
